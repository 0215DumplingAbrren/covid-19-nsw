{"version":3,"sources":["data.js","components/chart/StatisticsChart.jsx","components/chart/DailyConfirmedChart.jsx","components/chart/SourcePieChart.jsx","components/chart/index.jsx","components/summary/index.jsx","components/table/index.jsx","components/footer/AuthorModal.jsx","components/footer/ContributeModal.jsx","components/footer/index.jsx","App.js","dateTime.js","serviceWorker.js","index.js"],"names":["dailyData","stastics","sourceData","name","value","today","length","totalConfirmed","death","map","data","reduce","a","b","wip","excluded","totalTested","remain","predictedData","predictTotalResult","curDay","curDayName","curPredictResult","push","lastIndex","tomorrowDate","Date","setDate","getDate","nextTowDate","nextThreeDate","toDateString","addPredictionData","day","Math","exp","summaryData","recovered","dailyChartData","todayData","date","totalData","total","predictData","predictedTotal","round","deathData","getOptions","legend","show","selected","tooltip","xAxis","type","yAxis","series","itemStyle","normal","label","smooth","position","lineStyle","width","DailyConfirmedChart","option","i","stasticsData","axisLabel","formatter","StatisticsChart","orient","left","trigger","radius","avoidLabelOverlap","emphasis","textStyle","fontSize","fontWeight","SourcePieChart","Chart","className","Grid","columns","stackable","Column","Summary","Statistic","color","Table","unstackable","compact","Body","Row","negative","Cell","Footer","HeaderCell","DetailTable","url","frameborder","onmousewheel","height","AuthorModal","Modal","href","onClick","e","preventDefault","Header","Content","Description","List","bulleted","Item","ContributeModal","disqusConfig","identifier","title","App","Divider","DiscussionEmbed","shortname","config","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d79c186a.chunk.js","sourcesContent":["// date, new today, total confirmed, total death\nexport const dailyData = [\n  // ['January 24, 2020', 0, 0, 0],\n  // ['January 25, 2020', 3, 3, 0],\n  // ['January 27, 2020', 1, 4, 0],\n  ['March 1, 2020', 2, 6, 0],\n  ['March 2, 2020', 3, 9, 0],\n  ['March 3, 2020', 6, 15, 0],\n  ['March 4, 2020', 7, 22, 1],\n  ['March 5, 2020', 8, 25, 0],\n  ['March 6, 2020', 3, 28, 0],\n  ['March 7, 2020', 8, 36, 0],\n  ['March 8, 2020', 4, 40, 1],\n  ['March 9, 2020', 7, 47, 0],\n  ['March 10, 2020', 14, 61, 0],\n  ['March 11, 2020', 4, 65, 0],\n  ['March 12, 2020', 13, 78, 0],\n  ['March 13, 2020', 14, 92, 0],\n  ['March 14, 2020', 20, 112, 0],\n];\n\n// date, total confirmed, total wip, total excluded, total tested\nexport const stastics = [\n  ['March 7, 2020 09:00:00', 34, 545, 6217, 6796],\n  ['March 7, 2020 21:00:00', 36, 488, 6690, 7214],\n  ['March 8, 2020 09:00:00', 38, 488, 6690, 7216],\n  ['March 8, 2020 21:00:00', 40, 576, 7361, 7977], // nsw health said total tested is 8008, however that seems a mistake, I updated with the calculation total\n  ['March 9, 2020 16:32:00', 47, 476, 7848, 8371],\n  ['March 10, 2020 07:00:00', 55, 618, 8361, 9034],\n  ['March 10, 2020 21:00:00', 61, 1008, 9096, 10165],\n  ['March 11, 2020 13:00:00', 65, 1004, 9152, 10221],\n  ['March 12, 2020 13:00:00', 78, 1831, 11040, 12949], // nsw health said total tested is 14856, which is off the calculated total by 1907, corrected with calculation\n  ['March 13, 2020 11:00:00', 92, 1928, 14665, 16685],\n  ['March 14, 2020 11:00:00', 112, 1668, 18716, 20496]\n];\n\nexport const sourceData = [\n  {\n    name: 'overseas',\n    value: 51\n  },\n  {\n    name: 'contact of confirmed case',\n    value: 32\n  },\n  {\n    name: 'under investigation',\n    value: 18\n  },\n  {\n    name: 'not identified',\n    value: 11\n  }\n];\n\nconst today = dailyData[dailyData.length - 1][1];\nconst totalConfirmed = dailyData[dailyData.length - 1][2];\nconst death = dailyData.map(data => data[3]).reduce((a, b) => a + b);\n// eslint-disable-next-line\nconst [_1, _2, wip, excluded, totalTested] = stastics[stastics.length - 1];\n\n// Please manually updating the following data:\nconst recovered = 4;\n\nconst remain = totalConfirmed - death - recovered;\n\n// Exponential Regression prediction\nfunction predictTotalResultWithExpR(day) {\n  const regA = 9.465373537;\n  const regB = 0.1776784372;\n  return regA * Math.exp(regB * day)\n}\n\n// ploymomial regression prediction, assume the model to be y = ax^2 + bx + c\n// function predictTotalResultWithPR(nextDay) {\n//   const regA = 0.36063936;\n//   const regB = 1.731268731;\n//   const regC = 5.622377622;\n//   return regA * nextDay * nextDay + regB * nextDay + regC;\n// }\n\n\n// generate predicted data\nexport let predictedData = [];\n\nfunction addPredictionData(dailyData, predictedData, predictTotalResult) {\n  for (let curDay = 0; curDay < dailyData.length; curDay++) {\n    let curDayName = dailyData[curDay][0];\n    let curPredictResult = predictTotalResult(curDay + 1);\n    predictedData.push([curDayName, curPredictResult]);\n  }\n  // predict next 3 days\n  const lastIndex = dailyData.length -1;\n  const tomorrowDate = new Date(dailyData[lastIndex][0]);\n  tomorrowDate.setDate(tomorrowDate.getDate() + 1);\n  const nextTowDate = new Date(dailyData[lastIndex][0]);\n  nextTowDate.setDate(nextTowDate.getDate() + 2);\n  const nextThreeDate = new Date(dailyData[lastIndex][0]);\n  nextThreeDate.setDate(nextThreeDate.getDate() + 3);\n\n  predictedData.push([tomorrowDate.toDateString(), predictTotalResult(dailyData.length + 1)]);\n  predictedData.push([nextTowDate.toDateString(), predictTotalResult(dailyData.length + 2)]);\n  predictedData.push([nextThreeDate.toDateString(), predictTotalResult(dailyData.length + 3)]);\n}\n\n// add prediction with selected model\naddPredictionData(dailyData, predictedData, predictTotalResultWithExpR);\n\n\nexport const summaryData = {\n  totalConfirmed,\n  remain,\n  today,\n  death,\n  recovered,\n  wip,\n  excluded,\n  totalTested\n};\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport { stastics } from '../../data';\n\nlet totalConfirmed = [],\n  wip = [],\n  excluded = [],\n  totalTested = [];\n\nfor (let i = 0; i < stastics.length; i++) {\n  const data = stastics[i];\n  const date = new Date(data[0]);\n\n  totalConfirmed.push([date, data[1]]);\n  wip.push([date, data[2]]);\n  excluded.push([date, data[3]]);\n  totalTested.push([date, data[4]]);\n}\n\nconst stasticsData = {\n  totalConfirmed,\n  wip,\n  excluded,\n  totalTested\n};\n\nconst getOptions = data => {\n  return {\n    legend: {\n      show: true\n    },\n    tooltip: {\n      show: true\n    },\n    xAxis: {\n      type: 'time'\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        formatter: value => {\n          if (value >= 1000) {\n            return `${value / 1000}k`;\n          }\n          return value;\n        }\n      }\n    },\n    series: [\n      {\n        type: 'line',\n        name: 'total confirmed',\n        data: data.totalConfirmed\n      },\n      { type: 'line', name: 'under investigation', data: data.wip },\n      { type: 'line', name: 'tested and excluded', data: data.excluded },\n      { type: 'line', name: 'total tested', data: data.totalTested }\n    ]\n  };\n};\n\nexport const StatisticsChart = () => (\n  <>\n    <ReactEcharts option={getOptions(stasticsData)} />\n  </>\n);\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport { dailyData, predictedData } from '../../data';\n\nconst dailyChartData = {\n  todayData: dailyData.map(([date, today]) => [new Date(date), today]),\n  totalData: dailyData.map(([date, _today, total]) => [new Date(date), total]),\n  predictData: predictedData.map(([date, predictedTotal]) => [\n    new Date(date),\n    Math.round(predictedTotal)\n  ]),\n  deathData: dailyData.map(([date, _today, _total, death]) => [\n    new Date(date),\n    death\n  ])\n};\n\nconst getOptions = data => {\n  return {\n    legend: {\n      show: true,\n      selected: {\n        total: true,\n        'predicted total': false,\n        'new cases on the day': true\n        // 'new death cases': true\n      }\n    },\n    tooltip: {\n      show: true\n    },\n    xAxis: {\n      type: 'time'\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [\n      {\n        type: 'line',\n        name: 'total',\n        data: data.totalData,\n        itemStyle: {\n          normal: {\n            label: {\n              show: true\n            }\n          }\n        }\n      },\n      {\n        type: 'line',\n        name: 'predicted total',\n        data: data.predictData,\n        smooth: false,\n        itemStyle: {\n          normal: {\n            label: {\n              show: true,\n              position: 'right'\n            },\n            lineStyle: {\n              width: 2,\n              type: 'dotted' //'dotted'虚线 'solid'实线\n            }\n          }\n        }\n      },\n      {\n        type: 'bar',\n        name: 'new cases on the day',\n        data: data.todayData,\n        itemStyle: {\n          normal: {\n            label: {\n              show: true,\n              position: 'top'\n            }\n          }\n        }\n      }\n      // { type: 'bar', name: 'new death cases', data: data.deathData }\n    ]\n  };\n};\n\nexport const DailyConfirmedChart = () => (\n  <>\n    <ReactEcharts option={getOptions(dailyChartData)} />\n  </>\n);\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport { sourceData } from '../../data';\n\nconst getOptions = data => {\n  return {\n    legend: {\n      orient: 'vertical',\n      left: 0\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    series: [\n      {\n        type: 'pie',\n        radius: ['50%', '70%'],\n        avoidLabelOverlap: true,\n        left: 50,\n        name: 'source',\n        data,\n        label: {\n          normal: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            show: true,\n            textStyle: {\n              fontSize: '12',\n              fontWeight: 'bold'\n            }\n          }\n        }\n      }\n    ]\n  };\n};\n\nexport const SourcePieChart = () => (\n  <>\n    <ReactEcharts option={getOptions(sourceData)} />\n  </>\n);\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { DailyConfirmedChart } from './DailyConfirmedChart';\nimport { StatisticsChart } from './StatisticsChart';\nimport { SourcePieChart } from './SourcePieChart';\n\nexport const Chart = () => (\n  <>\n    <h2 className='ui small header'>Trending:</h2>\n    <Grid columns='equal' stackable>\n      <Grid.Column>\n        <DailyConfirmedChart />\n      </Grid.Column>\n\n      <Grid.Column>\n        <SourcePieChart />\n      </Grid.Column>\n\n      <Grid.Column>\n        <StatisticsChart />\n      </Grid.Column>\n    </Grid>\n  </>\n);\n","import React from 'react';\nimport { Grid, Statistic, Table } from 'semantic-ui-react';\nimport { summaryData } from '../../data.js';\nimport './index.scss';\n\nexport const Summary = () => {\n  const {\n    totalConfirmed,\n    remain,\n    recovered,\n    death,\n    wip,\n    today,\n    excluded,\n    totalTested\n  } = summaryData;\n  return (\n    <div className='summary'>\n      <h2 className='ui small header'>Summary data:</h2>\n      <Grid columns={4}>\n        <Grid.Column>\n          <Statistic color='blue' label='Remain' value={remain} />\n        </Grid.Column>\n        <Grid.Column>\n          <Statistic label='Total' value={totalConfirmed} />\n        </Grid.Column>\n        <Grid.Column>\n          <Statistic color='grey' label='Death' value={death} />\n        </Grid.Column>\n        <Grid.Column>\n          <Statistic color='green' label='Recover' value={recovered} />\n        </Grid.Column>\n      </Grid>\n      <Table unstackable compact>\n        <Table.Body>\n          <Table.Row negative>\n            <Table.Cell>New cases today</Table.Cell>\n            <Table.Cell>{today}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Cases under investigation</Table.Cell>\n            <Table.Cell>{wip}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Cases tested and excluded</Table.Cell>\n            <Table.Cell>{excluded}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell>Total tested</Table.HeaderCell>\n            <Table.HeaderCell>{totalTested}</Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </div>\n  );\n};\n","import React from 'react';\nimport Iframe from 'react-iframe';\n\nexport const DetailTable = () => (\n  <>\n    <h2 className='ui small header'>\n      Confirmed cases details(best view on desktop):\n    </h2>\n    <Iframe\n      className='airtable-embed'\n      url='https://airtable.com/embed/shr289gFl44ZlCYnC?backgroundColor=teal'\n      frameborder='0'\n      onmousewheel=''\n      width='100%'\n      height='500'\n    />\n  </>\n);\n","import React from 'react';\nimport { Modal, List, Header } from 'semantic-ui-react';\n\nexport const AuthorModal = () => (\n  <Modal\n    trigger={\n      // eslint-disable-next-line\n      <a href='#' onClick={e => e.preventDefault()}>\n        Joanna and her friends (Disclaimer)\n      </a>\n    }\n  >\n    <Modal.Header>Team, Thanks and Disclaimer</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <Header>Team member</Header>\n        <List bulleted>\n          <List.Item>\n            <a href='https://wileam.com/'>Joanna Wu</a>: design and develop the\n            website, update the data.\n          </List.Item>\n          <List.Item>\n            <a href='https://ngot.me/'>Henry Zhuang</a>: devops and update the\n            data\n          </List.Item>\n          <List.Item>\n            <a href='https://ivanfan.net/'>Ivan(Yifan) Fan</a>: developer, add regression prediction functionality\n          </List.Item>\n          <List.Item>\n            <a href='https://www.sydneytoday.com/'>Sydney Today</a>: media,\n            provide updated data from NSW Health\n          </List.Item>\n          <List.Item>Nan Zhang, update and analysis the data.</List.Item>\n        </List>\n\n        <Header>Thanks to</Header>\n        <List bulleted>\n          <List.Item>\n            <a href='https://www.echartsjs.com/'>echarts</a>\n          </List.Item>\n          <List.Item>\n            <a href='https://airtable.com/'>airtable</a>\n          </List.Item>\n        </List>\n        <Header>Disclaimer</Header>\n        <List bulleted>\n          <List.Item>\n          The views and options expressed in this blog are those of the authors and do not necessarily reflect the official policy or position of any other agency, organization, employer or company\n          </List.Item>\n          <List.Item>\n          Authors are not responsible for any errors or omissions, or for the results obtained from the use of this information. All information in this site is provided \"as is\", with no guarantee of completeness, accuracy, timeliness or of the results obtained from the use of this information\n          </List.Item>\n          <List.Item>\n            We do not make any warranties about the completeness, reliability and accuracy of these information.\n            None of the authors, contributors, adminstrators or anyone else connected with this website, in anyway whatsoever, can be responsible for your use of the information contained in or linked from these web pages.\n            Any action you take upon the information on this website is strictly at your own risk. and we will not be liable for any losses and damages in connection with the use of our website.\n          </List.Item>\n        </List>\n      </Modal.Description>\n    </Modal.Content>\n  </Modal>\n);\n","import React from 'react';\nimport { Modal } from 'semantic-ui-react';\n\nexport const ContributeModal = () => (\n  <Modal\n    trigger={\n      // eslint-disable-next-line\n      <a href='#' onClick={e => e.preventDefault()}>\n        contribute?\n      </a>\n    }\n  >\n    <Modal.Header>Help needed!</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <p>\n          Now as there is no api provided, all the data are manually updated.\n        </p>\n        <p>\n          We need more people to keep the data updated!! Please join telegram{' '}\n          {''}\n          <a href='https://t.me/covid_19_au'>@covid_19_au</a> if you wanna help,\n          what we need is simply: when you saw data updated, notify in the group\n          with the source link, thank you!\n        </p>\n      </Modal.Description>\n    </Modal.Content>\n  </Modal>\n);\n","import React from 'react';\nimport { AuthorModal } from './AuthorModal';\nimport { ContributeModal } from './ContributeModal';\n\nexport const Footer = () => (\n  <p>\n    <small>\n      Made by <AuthorModal />, <ContributeModal />\n    </small>\n  </p>\n);\n","import React from 'react';\nimport Disqus from 'disqus-react';\nimport { Summary, Chart, DetailTable, Footer } from './components';\nimport { Divider } from 'semantic-ui-react';\nimport { updateTime } from './dateTime.js';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\n\nconst disqusShortname = 'covid-19-wileam-com';\nconst disqusConfig = {\n  url: 'https://covid-19.wileam.com/',\n  identifier: 'covid-19-wileam-com',\n  title: 'CoVid-19 Updates - NSW'\n};\n\nfunction App() {\n  return (\n    <div className='ui container'>\n      <header>\n        <h1 className='ui header'>CoVid-19 Updates - NSW</h1>\n        <small className='ui small'>Site updated: {updateTime} AEDT</small>\n      </header>\n      <Summary />\n      <Divider />\n      <Chart />\n      <Divider />\n      <DetailTable />\n\n      <Disqus.DiscussionEmbed\n        shortname={disqusShortname}\n        config={disqusConfig}\n      />\n\n      <footer>\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","export const updateTime = 'March 14, 2020 17:17:09';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}